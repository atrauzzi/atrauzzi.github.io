{"componentChunkName":"component---src-templates-post-tsx","path":"/my-first-markdown-blog-post","result":{"data":{"allPost":{"edges":[{"node":{"id":"blog-post-459af444-6f36-53ff-b8f1-e322de4d0fde","parent":{"__typename":"MarkdownRemark","html":"<p>You might see this post as my first public musing in a while. Despite not having a consistent blogging pattern, I'm fairly active day-to-day. Sadly, I find that most developers' content isn't very discoverable these days!</p>\n<p>Welcome to my experiment!</p>\n<blockquote>\n<p>note: This post was created as over the course of developing this blog, so it's mostly just to test out markdown while sharing a little. I'll put up a more detailed rundown of how I have everything wired up later on.</p>\n</blockquote>\n<p>Over the last few years, I've been wishing for a way to publish my lessons and observations without having to compile them into full blog posts every time.  Rather than relying on a single source, I want to enable a multitude of different sources to be leveraged for blog content. Regardless of where that content comes from though, I want it to show up in a unified flow. Then, not only can I tap into temporal sources like markdown files and authored posts in the Blogger interface, but also ephemeral ones like twitter, github and anything else that strikes my fancy. This can help me avoid duplicating effort and extract benefit out of putting more detail into all the regular writing I already do.</p>\n<hr>\n<h3>How is it being done?</h3>\n<p>It may be no surprise these days as it's quite popular, but I've been using and recommending Gatsby for certain types of content-rich static web projects.  Something I find funny because I'm not at all a fan of GraphQL! Gatsby however makes the most compelling case for it that I've seen.  Gatsby lets me transform and normalize multiple data sources into my own common data structures.  After that, it's just a simple case of using React and all its strengths to structure templates and partials to spit out pages.</p>\n<p>Gatsby manages to be a really intriguing and rich ecosystem with lots of community contributed plugins. For example now I can have code blocks with syntax highlighting:</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-csharp line-numbers\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Testing</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-typescript line-numbers\"><code class=\"language-typescript\"><span class=\"token comment\">// With support for all my favourite languages!</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">type</span> <span class=\"token class-name\">Something<span class=\"token operator\">&lt;</span>Whatever <span class=\"token operator\">=</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> \n    one<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> \n    two<span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> \n    something<span class=\"token operator\">:</span> <span class=\"token string\">\"something\"</span><span class=\"token punctuation\">,</span> \n    whatever<span class=\"token operator\">:</span> Whatever<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> Consumer<span class=\"token operator\">:</span> ControlConsumer<span class=\"token punctuation\">,</span> Provider<span class=\"token operator\">:</span> ControlProvider <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token generic-function\"><span class=\"token function\">createContext</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token builtin\">boolean</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<hr>\n<p>As someone who spends a lot of time helping people with their CI and CD, I'd like this blog to always double as an example of some desirable practices not just for javascript projects, but for any kind of project.  Beyond Gatsby and React, I'm using some usual suspects to make working on this site a snap: TypeScript, eslint (prettier makes code ugly and dense), Material UI, moment, lodash and so on...\nFor builds, I use github actions and GitVersion to automate version incrementing, followed by yarn to do the nodejs specifics of Gatsby.  For deployment, I use the same github action with some branch filtered tasks which upload everything to a free-tier Azure blob storage container, all of which is fronted by cloudflare.</p>\n<p>I think there are some interesting details in the build and deployment, so I'm excited to go into more detail in a future post.</p>","internal":{"type":"MarkdownRemark"}},"internal":{"mediaType":"text/html","type":"post","owner":"default-site-plugin","ignoreType":null,"fieldOwners":null,"description":null,"contentDigest":"19ccff461d348e2ce4e4945eb4af49b5","content":null},"slug":"my-first-markdown-blog-post","title":"My First Markdown Blog Post","created":"2020-08-22T20:00:00.000Z","updated":null}}]}},"pageContext":{"slug":"my-first-markdown-blog-post"}},"staticQueryHashes":["3220165301"]}