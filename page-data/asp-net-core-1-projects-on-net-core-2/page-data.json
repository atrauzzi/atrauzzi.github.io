{"componentChunkName":"component---src-templates-post-tsx","path":"/asp-net-core-1-projects-on-net-core-2","result":{"data":{"allPost":{"edges":[{"node":{"id":"blog-post-a8c8bc6b-5f73-50d2-a940-09ad67fab330","parent":null,"internal":{"mediaType":"text/html","type":"post","owner":"default-site-plugin","ignoreType":null,"fieldOwners":null,"description":null,"contentDigest":"2017-10-06T20:32:41-07:00","content":"A small post for today although something I think could trip others up.&nbsp; I'm trying out the latest WebJobs 3.0 beta which is a port of the 2.0 version with .net Core 2.0 support.&nbsp; This is really exciting as .net Core projects are considerably easier to work with than .net 4.x.&nbsp; There tends to be less magic and they're a lot more command line friendly.<br />\n<br />\nOne issue is that in order to use the new WebJobs 3.0 library, my current ASP.net Core 1.x web applications need to be running on .net Core 2 to use it for dispatch.&nbsp; This hasn't been too much of a hassle, it was largely just a matter of updating the <span style=\"font-family: &quot;courier new&quot; , &quot;courier&quot; , monospace;\">TargetFramework</span> entry in my csproj to <span style=\"font-family: &quot;courier new&quot; , &quot;courier&quot; , monospace;\">netcoreapp2.0</span>.&nbsp; You may also end up with a few other items to clean up after that as the netcoreapp2.0 TFM comes with some useful configurations out of the box to ensure well behaved .net 4.6 PCLs are easier to get into your projects.<br />\n<br />\nThe one surprise I hit was that when I shipped things up to Azure App Service, I got a fairly hard error saying \"failed to load sni.dll\".&nbsp; Turns out that once running on the more stripped down Azure environment, the version that ended up being resolved during build was not correct.<br />\n<br />\nThe solution ended up being fairly simple, but because the error only happened on Azure, it was tough to track down.&nbsp; I just had to install version 4.4.0 of <a href=\"http://system.data.sqlclient/\">System.Data.SqlClient</a><span id=\"goog_2051490204\"></span><span id=\"goog_2051490205\"></span> to my data access project and I was back in action!<br />\nIn case you're wondering, the project I'm upgrading is somewhat tied to the claims APIs in 1.x.&nbsp; I'm for sure tracking a task to migrate to whatever version is current when the time avails itself.&nbsp; But it's great to know that I'm not going to fall behind and can take newer versions of other libraries orthogonal to the web project itself.<br />\n<br />\nAs promised, this was a nice short one!"},"slug":"asp-net-core-1-projects-on-net-core-2","title":"ASP.net Core 1 Projects on .NET Core 2","created":"2017-10-07T03:18:00.000Z","updated":"2017-10-07T03:32:41.000Z"}}]}},"pageContext":{"slug":"asp-net-core-1-projects-on-net-core-2"}},"staticQueryHashes":["3220165301"]}