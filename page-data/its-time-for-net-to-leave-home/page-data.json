{"componentChunkName":"component---src-templates-post-tsx","path":"/its-time-for-net-to-leave-home","result":{"data":{"allPost":{"edges":[{"node":{"id":"blog-post-7ab7c83e-e918-58a6-9a61-89c7d8f98d96","parent":{"__typename":"MarkdownRemark","html":"<p>By now everyone has heard about Microsofts gaffe around hot reloading this week.</p>\n<p>It was kicked off by a <a href=\"https://devblogs.microsoft.com/dotnet/update-on-net-hot-reload-progress-and-visual-studio-2022-highlights/\">blog post</a> and <a href=\"https://github.com/dotnet/sdk/pull/22217\">merge</a> that removed the tooling-agnostic ability for the <code class=\"language-text\">dotnet</code> command to perform hot reloads of code. That functionality was then moved over to Visual Studio as an exclusive.\nThis prompted the creation of <a href=\"https://github.com/dotnet/sdk/pull/22262\">a protest reversal of the commit on the <code class=\"language-text\">dotnet/sdk</code> repository</a> and <a href=\"https://github.com/dotnet/sdk/issues/22247\">an issue asking the important question <em>why</em></a>.</p>\n<p>Some higher visbility news sources wasted no time in covering the situation as-it-happened with <a href=\"https://www.theverge.com/2021/10/22/22740701/microsoft-dotnet-hot-reload-removal-decision-open-source\">The Verge questioning Microsofts commitment to open source</a>.</p>\n<p>The protest reversal - which one .NET MVP <a href=\"https://twitter.com/nickchapsas/status/1452008292688007175\">noted was more or less a petition</a> - was symbolically accepted and <a href=\"https://devblogs.microsoft.com/dotnet/net-hot-reload-support-via-cli/\">a blog post statement</a> from <a href=\"https://twitter.com/coolcsh/status/1452021862347644929\">Scott Hunter</a> was released.</p>\n<p>I'll get into why this blog post accomplishes nothing and worse still, exacerbates the situation; the community definitely needs to start cornering Microsoft on their double-speak ways.</p>\n<p><strong>More importantly though, I think it's time for .NET to leave home...</strong></p>\n<h2>What is \"open source\", really?</h2>\n<p>By the strictest definition, \"open source\" is the mere policy of the source code for a program being visible. It need be nothing more and if we lived in a world devoid of intent, then that interpretation might suffice.  There is however a more colloquial understanding of the term that is more often what people take it to <em>mean</em>. So, going forward, I would like to make clear that I strongly disagree and question the intentions of anyone taking the term <em>open source</em> to mean anything less than the following:</p>\n<ul>\n<li>Source code is publicly available to all, free of any and all charge</li>\n<li>Source code is released under a permissive license, typically - or to compete with the moral bars set by - Apache, MIT or GPL</li>\n<li>\n<p>The software runs equally on Linux, macOS and Windows and will usually run on x86 and ARM</p>\n<ul>\n<li>Honourable mention: RISC-V is on the horizon these days!</li>\n</ul>\n</li>\n</ul>\n<p>We can quibble over whether that interpretation is <em>literally correct</em>.  If someone is going to die on the hill of how to interpret \"open source\", then they aren't really eligible to make a productive contribution to the discussion.  That includes disagreeing on the basis that this is perhaps not how Microsoft ever intended it.</p>\n<p>I'm going to side with what the general public understands <em>open source</em> to imply and you should too.</p>\n<h2>The apple that rolled away from the tree</h2>\n<p>It's a popular idiom to say that <a href=\"https://idioms.thefreedictionary.com/the+apple+doesn&#x27;t+fall+far+from+the+tree\"><em>\"the apple doesn't fall far from the tree\"</em></a>.  The same could be said of .NET for a good chunk of its existence.</p>\n<p>What makes things interesting is that around 2014, Microsoft decided that it would not <em>just</em> move .NET into being developed in the open.  Microsoft also committed to a first-party multi platform .NET.</p>\n<blockquote>\n<p>Personal sidenote: this was nothing short of amazing and instantly captured my attention.  Despite being so cloistered, .NET and C# are two exceptional technologies!</p>\n</blockquote>\n<p>At this point, if we're still having some fun with the idiom - and if we imagine the seeds never rooted - in 2014, the apple that is .NET spontaneously rolled away from the tree!</p>\n<p>With that, .NET became a pariah in the Microsoft ecosystem, challenging everything that Microsoft had staked its identity on to date!</p>\n<h2>Microsoft is a business</h2>\n<p>I can't even begin to count the number of times I'm reading or participating in a discourse on modern .NET when some pro-Microsoft smartypants breezes in with the classic <em>\"well actually\"</em> saying something very close if not identical to: <em>\"What people seem to forget is that Microsoft is a business...\"</em> They then go on to offer cheap wisdom about how it's unreasonable to expect Microsoft to give anything away for free.</p>\n<p>These people?  They're stuck in the past.</p>\n<p>Much like those who would quibble over the literal interpretation of \"open source\", these individuals attempt to use a fact to bring in their own outdated nuance. Let's strengthen the context here a little to make very clear that while - yes - Microsoft <em>is</em> a business, it is a business in the year 2021, not 1997.</p>\n<p><strong>What people who say <em>\"what people seem to forget...\"</em>, themselves seem to forget is that between the years 2000 and 2014, Microsoft got absolutely - and I do mean absolutely, right-royally - routed, roiled, rocked and shellacked by open source.</strong></p>\n<p>Get that history lesson however you want, but get it fast.</p>\n<p>Whether it was PHP dominating server-side share to this day, the antics around TCO, Linux being a \"cancer\", anything to do with MSSQL, Windows Vista, Silverlight, the rise of Apple, the failure of Windows Phone, the ubiquity of Java, early Windows-only Azure, or any number of other missteps; The world at large shifted Microsoft to the very brink of mainstream irrelevance. Which anyone with an ounce of savvy will know precedes a decline in adoption.</p>\n<p>Do you know what the right business move in response to this was?</p>\n<h2>A free, open source, all-platform Microsoft!</h2>\n<p>Microsoft supporting open source is still to this day an act of appeasement, not contrition. It has yet to truly embrace the philosophies of open source as defined above. I haven't been able to keep a comprehensive list over the years of every time Microsoft has betrayed the spirit of open source.</p>\n<p>Without a doubt, Microsoft regularly takes calculated and overreaching risks against their own stated commitments:</p>\n<ul>\n<li>In 2020, <a href=\"https://twitter.com/alextrauzzi/status/1311452153467170816\">I learned</a> that remote developer extensions don't work on non-Microsoft VS Code builds</li>\n<li><a href=\"https://twitter.com/hhariri/status/1451841350123597829\">The .NET debugger can only be used by Microsoft</a></li>\n<li>Acquiring and then <a href=\"https://github.com/mono/monodevelop\">closing off MonoDevelop</a> to turn it into Visual Studio for Mac</li>\n<li>Absence of Linux support in MAUI</li>\n<li><a href=\"https://github.com/dotnet/sdk/issues/6145\">Default-on telemetry</a></li>\n<li><a href=\"https://github.com/dotnet-foundation/Home/discussions/39\">The Dotnet Foundation</a></li>\n</ul>\n<p>There are more, many more occurences of this over the course things.  If you use Azure, you'll get it especially bad.  I've had support requests responded to with \"just use MSSQL instead of postgres\" <em>within the last year</em>.   Microsoft always slides backwards when presented with a decision, without taking into account the aggregate signal that doing this repeatedly sends.</p>\n<p>Over time that adds up to the message that Microsoft doesn't in fact ❤️ Linux, open source or anything except themselves.</p>\n<h2>This is not a communication problem</h2>\n<p>It's a problem of <em>intent</em>.</p>\n<p>What would things look like if open source Microsoft devotees never spoke out?  How much encroachment does Microsoft attempt on a regular basis; where if there weren't stakeholders ready to met out a moral consequence and commensurate finger-wagging, that these encroachments would eventually lead Microsoft back to their old ways?</p>\n<p>It's not a stretch as recent events have demonstrated.  We've just seen the community bristle at Microsoft in a big way for making what are honestly obvious mistakes.  But this isn't the only time, it happens on a regular basis and I find something particularly toxic about how they tend to respond. There's a cycle of abuse that Microsoft always seems bent on preserving, even some of the phrasing in the blog post from Scott Hunter on hot reload gives pause:</p>\n<ul>\n<li><em>\"That said, like any development team, from time to time we have to look at quality, time, resources to make tradeoffs while continuing to make forward progress.\"</em></li>\n<li><em>\"...we want to make sure VS delivers the best experience for .NET 6.\"</em></li>\n<li><em>\"With the runway getting short for the .NET 6 release and Visual Studio 2022, we chose to focus on bringing Hot Reload to VS2022 first.\"</em></li>\n</ul>\n<p>I'm sorry, are we talking about .NET or Visual Studio? You don't have to read between the lines to see that an open source .NET is not what Scott is talking about in this post.  Throughout this whole kerfuffle, Scott is trying to contain the discussion to hot reload while also turning it into a boast about Visual Studio.</p>\n<p>There's this weird pattern when talking with Microsoft employees because it doesn't matter who, you're often engaged with the same underlying communications strategy. They rarely act on feedback and when they do, it's usually not without disingenuous and selective interpretation.</p>\n<blockquote>\n<p>Personal sidenote: I call this the <a href=\"https://media1.giphy.com/media/DIbzn2yxRjCrOlhQ1S/giphy.gif?cid=790b761162392a33ac58fb260bd6591c8be8f41bacfca53b&#x26;rid=giphy.gif&#x26;ct=g\">Agent Smith</a> communications strategy.</p>\n</blockquote>\n<p>Sure, maybe the people we're talking to aren't the ones directly responsible.  In fact, there's more than enough evidence to show that the people we users get to speak with are the ones championing the positive shifts.  If that's the case though, who else can users run a message directly to?  Why isn't Julia Liuson out in front on this and why can't we gauge her commitment to an open source Microsoft the way we can other .NET personalities if she wields so much power so carelessely?</p>\n<p>It's not practical to expect people to keep track of what mode is appropriate when trying to give badly needed feedback. At some point Microsoft has to collectively take responsibility for its collective actions which are governed by <em>its collective intent</em>.</p>\n<h2>A free, open source, all-platform .NET</h2>\n<p><em>...is only the first step.</em></p>\n<p>There is no medal for participation here, there's no consollation prize for getting it wrong <em>only up until now</em>.  You don't clear your name by doing the same things as competitors that you spent years losing to.  Yeah, it would be nice if all that was necessary was a superficial shift in communications strategy.</p>\n<p><strong>What is a <em>free, open source, all platform .NET</em> when it has to share a roof with a Windows, an Azure, a Visual Studio and a Microsoft SQL Server?  Yes it's come a long way, but Microsoft doesn't deserve praise for negligence today because yesterday it was ignorance.</strong></p>\n<p>There are too many loose ends when you look at things holistically.  The .NET ecosystem welcomes contributions from the public, but is it not a bit perverse that the terms by which .NET exists today could mean that contributions that originate from the community could at any point be kidnapped into a closed source product?  Yikes.</p>\n<h2>An independent .NET</h2>\n<p>The suggestion is as simple as the title of this post: The time has come for .NET to take its hope chest and go out into the world.</p>\n<p>Microsoft has tried every way possible to rebrand .NET as a spiritual competitor to the JVM ecosystem. Right down to creation of a pseudo-foundation.  Sadly, this strategy has run its course because Microsoft just can't resist the temptation to meddle.</p>\n<p>Existing in the same legal entity that has Windows, Azure and Visual Studio is just too much risk and as a result, the challenges .NET faces end up coming from within.</p>\n<p><strong>Microsoft is .NETs greatest enemy.</strong></p>\n<p>History has more than shown this time and time again, I think it's safe to say that the verdict is in on an \"open source\" Microsoft and it's as everyone feared: <em>A sham.</em></p>\n<p>Microsoft needs to eject everything to do with .NET into the wild under a new or fully rearchitected .NET foundation.  In such a way where Microsoft doesn't have a majority stake as some omnipotent \"founding member\".  Yeah, they're still going to be expected to full-time fund the same developers and plough money into it like they are currently.</p>\n<p>The difference though is that the direction of .NET would be subject to approval from the community and the ecosystem will finally be able to grow in the way they think they can get by merely imitating open source.</p>\n<p>It's very easy to see how being fully independent would offer the checks and balances needed to ensure an over ambitious VP or PM doesn't try to reach in and take something out - the way we saw this past week - ever again.</p>","internal":{"type":"MarkdownRemark"}},"internal":{"mediaType":"text/html","type":"post","owner":"default-site-plugin","ignoreType":null,"fieldOwners":null,"description":null,"contentDigest":"238c2a6d1c5621eb2fe90b7a0481b242","content":null},"slug":"its-time-for-net-to-leave-home","title":"It's time for .NET to Leave Home","created":"2021-10-24T22:05:00.000Z","updated":null}}]}},"pageContext":{"slug":"its-time-for-net-to-leave-home"}},"staticQueryHashes":["3220165301"]}